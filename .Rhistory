as.numeric('NULL')
eval('NULL')
test=1:463
r=c(2,20,40)
which(test %in% r)
column=rep(1,length(test))
column[!which(test %in% r)]=0
which(column==0)
column
test %in% r
column[which(!(test %in% r))]=0
supply=seq(8,25, 0.2)
policy1=rnorm(supply, mean = 1100, sd=100)
policy2=rnorm(supply, mean=1050, sd=50)
plot(x=supply, y=sort(policy1), type="l", color='black')
plot(x=supply, y=sort(policy1), type="l", col='black')
supply=seq(0,1, 0.05)
x=seq(0,1, 0.05)
policy1=rnorm(x, mean = 0.5, sd=.1)
policy2=rnorm(x, mean=0.5, sd=.5)
plot(x=x, y=sort(policy1), type="l", col='black')
lines(x=x, y=sort(policy2), col="lightgray")
policy1=dnorm(x, mean = 0.5, sd=.1)
policy2=dnorm(x, mean=0.5, sd=.5)
plot(x=x, y=sort(policy1), type="l", col='black')
lines(x=x, y=sort(policy2), col="lightgray")
x=seq(0,1, 0.05)
policy1=dnorm(x, mean = 0.5, sd=.1)
policy2=dnorm(x, mean=0.5, sd=.5)
plot(x=x, y=sort(policy1), type="l", col='black')
lines(x=x, y=sort(policy2), col="lightgray")
plot(x=x, y=(policy1), type="l", col='black')
x=seq(0,1, 0.02)
policy1=dnorm(x, mean = 0.5, sd=.1)
policy2=dnorm(x, mean=0.5, sd=.5)
plot(x=x, y=(policy1), type="l", col='black')
policy1=dnorm(x, mean = 0.5, sd=.05)
policy2=dnorm(x, mean=0.5, sd=.5)
plot(x=x, y=(policy1), type="l", col='black')
x=seq(0,1, 0.005)
policy1=dnorm(x, mean = 0.5, sd=.05)
policy2=dnorm(x, mean=0.5, sd=.5)
plot(x=x, y=(policy1), type="l", col='black')
lines(x=x, y=(policy2), col="lightgray")
policy2=dnorm(x, mean=0.5, sd=.2)
plot(x=x, y=(policy1), type="l", col='black')
lines(x=x, y=(policy2), col="lightgray")
policy2=dnorm(x, mean=0.5, sd=.1)
plot(x=x, y=(policy1), type="l", col='black')
lines(x=x, y=(policy2), col="lightgray")
plot(x=x, y=(policy1), type="l", col='black', lwd=2)
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2))
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), border = NULL)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), border = NULL)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
plot(x=x, y=(policy1), type="l", col='black', lwd=2)
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n", yaxt="n")
plot(x=x, y=(policy1), type="l", col='black', lwd=2)
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n")
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n")
?par
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="uncertain model parameter", ylab="policy performance")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
policy1=dnorm(x, mean = 0.5, sd=.08)
policy2=dnorm(x, mean=0.5, sd=.1)
par()
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="uncertain model parameter", ylab="policy performance")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
policy2=dt(x, mean=0.5, sd=.1)
policy2=dnorm(x, mean=0.5, sd=.2)+1
par()
policy1=dnorm(x, mean = 0.5, sd=.08)
policy2=dnorm(x, mean=0.5, sd=.2)+1
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="uncertain model parameter", ylab="policy performance")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
policy2=dnorm(x, mean=0.5, sd=.1.5)+1
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="uncertain model parameter", ylab="policy performance")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
policy1=dnorm(x, mean = 0.5, sd=.08)
policy2=dnorm(x, mean=0.5, sd=.15)+1.5
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="uncertain model parameter", ylab="policy performance")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
par(mar=c(0.5,0.5,1,1))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="uncertain model parameter", ylab="policy performance")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
x=seq(0,1, 0.005)
policy1=dnorm(x, mean = 0.5, sd=.08)
policy2=dnorm(x, mean=0.5, sd=.15)+1.5
par(mar=c(2,2,2,,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="uncertain model parameter", ylab="policy performance")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="uncertain model parameter", ylab="policy performance")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
mtext(side=1, text="uncertain model parameter")
mtext(side=1, text="uncertain model parameter"m line=1)
mtext(side=1, text="uncertain model parameter"m line=1)
mtext(side=1, text="uncertain model parameter"m line=1.5)
mtext(side=1, text="uncertain model parameter", line=1.5)
mtext(side=1, text="uncertain model parameter", line=.5)
mtext(side=1, text="policy performance", line=.5)
x=seq(0,1, 0.005)
policy1=dnorm(x, mean = 0.5, sd=.08)
policy2=dnorm(x, mean=0.5, sd=.15)+1.5
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
mtext(side=1, text="uncertain model parameter", line=.5)
mtext(side=2, text="policy performance", line=.5)
x=seq(0,1, 0.005)
policy1=dnorm(x, mean = 0.5, sd=.08)
policy2=dnorm(x, mean=0.5, sd=.2)+1.5
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
mtext(side=1, text="uncertain model parameter", line=.5)
mtext(side=2, text="policy performance", line=.5)
x=seq(0,1, 0.005)
policy1=dnorm(x, mean = 0.5, sd=.05)
policy2=dnorm(x, mean=0.5, sd=.2)+1.5
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
mtext(side=1, text="uncertain model parameter", line=.5)
mtext(side=2, text="policy performance", line=.5)
x=seq(0,1, 0.005)
policy1=dnorm(x, mean = 0.5, sd=.05)
policy2=dnorm(x, mean=0.5, sd=.2)+3
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
mtext(side=1, text="uncertain model parameter", line=.5)
mtext(side=2, text="policy performance", line=.5)
x=seq(0,1, 0.005)
policy1=dnorm(x, mean = 0.5, sd=.05)
policy2=dnorm(x, mean=0.5, sd=.2)+3
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
mtext(side=1, text="uncertain model parameter", line=.5)
mtext(side=2, text="policy performance", line=.5)
x=seq(0,1, 0.005)
policy1=dnorm(x, mean = 0.5, sd=.05)
policy2=dnorm(x, mean=0.5, sd=.2)+3
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
mtext(side=1, text="uncertain model parameter", line=.5)
mtext(side=2, text="policy performance", line=.5)
x=seq(8, 25, 0.01)
policy1=x^4-3*x^2
x=seq(8, 25, 0.01)
policy1=x^4-3*x^2
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
x=seq(8, 25, 0.01)
policy1=x^4-3*x^3
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
x=seq(8, 25, 0.01)
policy1=x^4-100*x^3
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
x=seq(-100, 100, 1)
policy1=x^4-100*x^3
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
x=seq(0,1, 0.005)
policy1=dnorm(x, mean = 0.5, sd=.05)
policy2=dnorm(x, mean=0.5, sd=.2)+3
par(mar=c(2,2,2,2))
plot(x=x, y=(policy1), type="l", col='black', lwd=2, yaxt="n", xaxt="n", xlab="", ylab="")
lines(x=x, y=(policy2), col="lightgray", lwd=2)
legend("topright", legend=c("policy 1", "policy 2"), col=c("black", "lightgray"), lwd=c(2,2), bty="n")
mtext(side=1, text="uncertain model parameter", line=.5)
mtext(side=2, text="maximization objective", line=.5)
# app in Phase III report link
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App-Phase III report/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
config = {
'toImageButtonOptions': {
'format': 'svg', # one of png, svg, jpeg, webp
'filename': 'custom_image',
'height': 500,
'width': 700,
'scale': 1 # Multiply title/legend/axis/canvas sizes by this factor
}
}
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
