as.numeric('NULL')
eval('NULL')
test=1:463
r=c(2,20,40)
which(test %in% r)
column=rep(1,length(test))
column[!which(test %in% r)]=0
which(column==0)
column
test %in% r
column[which(!(test %in% r))]=0
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
options(shiny.error=browser)
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
cat(file=stderr(), 'logBaseline$log:', logBaseline$log, "\n") # prints dimension to R console
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
install.packages("gtools")
library(gtools)
df.initialize=data.frame(matrix(ncol=6, nrow=1), stringsAsFactors = FALSE)
colnames(df.initialize)=c("page", "metric", "filter.type", "lower", "upper", "table.selection.ID")
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
names(df.initialize)
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
####### Commands to render Flexdashboard HTML
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
# V5 is what you presented to Reclamation on 3/17/21
setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies V5/CRB-Robustness-App-BOR')
filename='Web app.Rmd'
#what you are developing for Journal article
# setwd('G:/My Drive/CU Boulder/Phase 3 Robustness Calculations/R/scripts/Interactive dashboards/Robustness App All policies for Journal Article/Robustness-App-4Journal')
# filename='Par Coords and Stacked Histograms.Rmd'
# make errors print in r console
# options(shiny.error=browser)
# stop errors from printing in r console
# options(shiny.error=NULL)
# render to your Viewer. From viewer, can publish to a server like shinyapps.io or open in browser
# rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0"))
# launch app to your web browser
rmarkdown::run(filename, shiny_args = list(port = 3838, host = "0.0.0.0", launch.browser=TRUE))
